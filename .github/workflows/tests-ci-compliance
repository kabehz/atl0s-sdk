name: Pytest CI/CD Multitecnológico

on:
  push:
    branches:

  pull_request:
    branches:
      - main

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Generar matriz de tecnologías y componentes
        id: set-matrix
        run: |
          python scripts/generate_matrix.py > matrix.json
          echo "::set-output name=matrix::$(cat matrix.json)"

  test:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix).include }}
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Instalar dependencias
        run: |
          pip install -r src/${{ matrix.tecnologia }}/${{ matrix.component }}/requirements.txt

      - name: Configurar PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src/${{ matrix.tecnologia }}/${{ matrix.component }}" >> $GITHUB_ENV

      - name: Ejecutar pruebas
        run: |
          pytest src/${{ matrix.tecnologia }}/${{ matrix.component }}/tests/ --tb=short -q --disable-warnings --maxfail=5

